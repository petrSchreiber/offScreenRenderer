' Demo of 8bit offScreenRenderer

uses "TBGL"

#includedir "units"
#include "offScreenRenderer8b.tbasicu"

function tbMain()
 
  ' -- Create and show window
  dword hWnd = tbgl_createWindowEx "offScreenRenderer demo - press ESC to quit", 256, 256, 32, %TBGL_WS_WINDOWED
  tbgl_showWindow
 
  if offScreenRenderer8b_IsSupported = false Then
    tbgl_destroyWindow
    stop
  end if

  ' -- Creating image buffer of double the size of current window
  dim offScreenRenderer As offScreenRenderer8b(512, 512)
   
  ' -- Resets status of all keys
  tbgl_resetKeyState()
 
  tbgl_backColor 64, 128, 255
 
  ' -- Main loop
  while tbgl_IsWindow hWnd
    
    ' -- Here we perform the offscreen rendering
    offScreenRenderer.beginRender
   
      tbgl_renderMatrix2D(0, 0, 256, 256)
      tbgl_clearFrame
     
      drawImage
     
    offScreenRenderer.endRender

    ' -- Here we render the contents of image buffer to smaller screen
      tbgl_renderMatrix2D(0, 0, 1, 1)
      tbgl_clearFrame                  

      tbgl_pushState %TBGL_TEXTURING
      offScreenRenderer.bindTexture

        drawFullScreenQuad
        
      tbgl_popState          
   
    tbgl_drawFrame

    if tbgl_getWindowKeyState(hWnd, %VK_ESCAPE) then exit while

  wend

  offScreenRenderer.saveAsBMP app_sourcePath + "output.bmp"

  tbgl_destroyWindow
end function

function drawImage()

  tbgl_pushStateProtect %TBGL_TEXTURING | %TBGL_DEPTH
    tbgl_pushColor 255, 64, 32          
      tbgl_pushMatrix
        tbgl_translate 128, 128
        tbgl_ngon(0, 0, 100, 32)
      tbgl_popMatrix
    tbgl_popColor 

    tbgl_pushColor 255, 255, 255
      tbgl_pushMatrix
        tbgl_translate 128, 128
       
        tbgl_rotate timer*100
        tbgl_translate 10, 0
       
        tbgl_ngon(0, 0, 80, 360)
      tbgl_popMatrix
    tbgl_popColor 

    tbgl_pushColor 255, 128, 64
      tbgl_pushMatrix
        tbgl_translate 128, 128
       
        tbgl_rotate -timer*100
        tbgl_translate 20, 0
       
        tbgl_ngon(0, 0, 40, 360)
      tbgl_popMatrix
    tbgl_popColor 

  tbgl_popStateProtect

end function

function drawFullScreenQuad()

  tbgl_pushStateProtect %TBGL_LIGHTING
    tbgl_pushColor 255,255,255
      tbgl_beginPoly %GL_QUADS
        tbgl_texCoord2D 0,0
        tbgl_vertex 0,0
 
        tbgl_texCoord2D 1,0
        tbgl_vertex 1,0
 
        tbgl_texCoord2D 1,1
        tbgl_vertex 1,1
 
        tbgl_texCoord2D 0,1
        tbgl_vertex 0,1
      tbgl_endPoly
    tbgl_popColor 
  tbgl_popStateProtect
 
end function
